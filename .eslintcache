[{"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\index.tsx":"1","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\reportWebVitals.ts":"2","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\App.tsx":"3","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\layouts\\Navigation.tsx":"4","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\layouts\\index.tsx":"5","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\layouts\\Footer.tsx":"6","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\Dashboard.tsx":"7","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\index.ts":"8","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\auth\\authReducers.ts":"9","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\auth\\authTypes.ts":"10","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\Login.tsx":"11","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\services\\AuthService.ts":"12","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\utils\\LocalStorage.ts":"13","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\core\\Constants.ts":"14","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\auth\\authActions.ts":"15","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\core\\Axios.ts":"16","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\Category.tsx":"17","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\services\\CategoryService.ts":"18","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\models\\CategoryItem.ts":"19","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\utils\\MUIDataTableLang.ts":"20","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\shared\\AxiosInterceptorMessage.tsx":"21","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\shared\\Loading.tsx":"22","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\theme\\themeReducers.ts":"23","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\theme\\themeActions.ts":"24","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\theme\\themeTypes.ts":"25","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\Theme.tsx":"26","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\utils\\Alerts.ts":"27","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\Router.tsx":"28","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\layouts\\PrivateRoute.tsx":"29","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\services\\ReportService.ts":"30","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\models\\Report.ts":"31"},{"size":657,"mtime":1612812002676,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":294,"mtime":1612812115400,"results":"35","hashOfConfig":"33"},{"size":6946,"mtime":1612463639940,"results":"36","hashOfConfig":"33"},{"size":3803,"mtime":1610285479114,"results":"37","hashOfConfig":"33"},{"size":545,"mtime":1609685627020,"results":"38","hashOfConfig":"33"},{"size":2703,"mtime":1612648695818,"results":"39","hashOfConfig":"33"},{"size":775,"mtime":1610296116411,"results":"40","hashOfConfig":"33"},{"size":1647,"mtime":1612721317808,"results":"41","hashOfConfig":"33"},{"size":761,"mtime":1612463455798,"results":"42","hashOfConfig":"33"},{"size":4653,"mtime":1612721328048,"results":"43","hashOfConfig":"33"},{"size":544,"mtime":1611596599283,"results":"44","hashOfConfig":"33"},{"size":1722,"mtime":1611605315516,"results":"45","hashOfConfig":"33"},{"size":454,"mtime":1611604955033,"results":"46","hashOfConfig":"33"},{"size":508,"mtime":1612463475671,"results":"47","hashOfConfig":"33"},{"size":2565,"mtime":1612811726231,"results":"48","hashOfConfig":"33"},{"size":7008,"mtime":1612120981181,"results":"49","hashOfConfig":"33"},{"size":2191,"mtime":1612121338662,"results":"50","hashOfConfig":"33"},{"size":776,"mtime":1612648404400,"results":"51","hashOfConfig":"33"},{"size":1269,"mtime":1610047578197,"results":"52","hashOfConfig":"33"},{"size":619,"mtime":1610285260637,"results":"53","hashOfConfig":"33"},{"size":1171,"mtime":1612813670632,"results":"54","hashOfConfig":"33"},{"size":1565,"mtime":1612813356969,"results":"55","hashOfConfig":"33"},{"size":588,"mtime":1612463592288,"results":"56","hashOfConfig":"33"},{"size":840,"mtime":1612463407767,"results":"57","hashOfConfig":"33"},{"size":1196,"mtime":1612640036837,"results":"58","hashOfConfig":"33"},{"size":524,"mtime":1611604200266,"results":"59","hashOfConfig":"33"},{"size":1876,"mtime":1612813829853,"results":"60","hashOfConfig":"33"},{"size":1068,"mtime":1612813445445,"results":"61","hashOfConfig":"33"},{"size":611,"mtime":1612648531662,"results":"62","hashOfConfig":"33"},{"size":334,"mtime":1612648395429,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1y8v7z5",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\index.tsx",[],["129","130"],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\reportWebVitals.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\App.tsx",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\layouts\\Navigation.tsx",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\layouts\\index.tsx",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\layouts\\Footer.tsx",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\Dashboard.tsx",["131"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Card, CardContent, CardActions, Button } from '@material-ui/core';\r\nimport ReportService from '../services/ReportService'\r\nimport Report from '../models/Report'\r\n\r\nconst Dashboard: React.FC = () => {\r\n\r\n  const service = new ReportService();\r\n  const [reportData, setReportData] = useState<Report>({\r\n    hotDealCount: 0,\r\n    todayHotDealCount: 0,\r\n    userCount: 0\r\n  } as Report);\r\n  \r\n  useEffect(() => {\r\n    const getItems = async () => {\r\n      try {\r\n        const result = await service.getReport();\r\n        setReportData(result);\r\n      } catch(err){\r\n        console.log(\"err\", err);\r\n      }\r\n    }\r\n    getItems();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      //minWidth: 275,\r\n    }\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12} md={4} lg={4}>\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Toplam Kayıtlı Kullanıcı\r\n              </Typography>\r\n              <Typography variant=\"h4\" component=\"h2\">\r\n                {reportData.userCount} kişi\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\">Kullanıcı Listesi</Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4} lg={4}>\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Bugün ki Sıcak Fırsat\r\n              </Typography>\r\n              <Typography variant=\"h4\" component=\"h2\">\r\n                {reportData.todayHotDealCount} konu\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\">Kullanıcı Listesi</Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4} lg={4}>\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Toplam Sıcak Fırsat\r\n              </Typography>\r\n              <Typography variant=\"h4\" component=\"h2\">\r\n                {reportData.hotDealCount} konu\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\">Kullanıcı Listesi</Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Dashboard;","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\index.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\auth\\authReducers.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\auth\\authTypes.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\Login.tsx",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\services\\AuthService.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\utils\\LocalStorage.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\core\\Constants.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\auth\\authActions.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\core\\Axios.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\Category.tsx",["132"],"import React, { useState, useEffect } from 'react';\r\nimport MUIDataTable, { MUIDataTableColumnDef, MUIDataTableMeta } from \"mui-datatables\";\r\nimport { toast } from 'react-toastify';\r\nimport CategoryService from \"../services/CategoryService\";\r\nimport CategoryItem, { CategoryForm } from \"../models/CategoryItem\";\r\nimport MUIDataTableLang from \"../utils/MUIDataTableLang\";\r\nimport { Tooltip, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, TextField } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst Category: React.FC = () => {\r\n  \r\n  const service = new CategoryService();\r\n\r\n  const initialFormState: CategoryForm = {\r\n    id: undefined,\r\n    title: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  const [items, setItems] = useState<CategoryItem[]>(new Array<CategoryItem>());\r\n  const [form, setForm] = useState<CategoryForm>(initialFormState);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [removeDialogOpen, setRemoveDialogOpen] = useState(false);\r\n\r\n  //const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    const getItems = async () => {\r\n      try {\r\n        const result = await service.getItems();\r\n        setItems(result);\r\n      } catch(err){\r\n        console.log(\"err\", err);\r\n      }\r\n      \r\n      \r\n    }\r\n    getItems();\r\n  }, []);\r\n\r\n  const handleDialogClose = () => {\r\n    setDialogOpen(false);\r\n    setRemoveDialogOpen(false);\r\n    setForm(initialFormState);\r\n  }\r\n  \r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const handleTableUpdateButton = (tableMeta: MUIDataTableMeta) =>{\r\n    const row: any = tableMeta.tableData[tableMeta.rowIndex];\r\n    const { id, title, description } = row;\r\n    setForm({ ...form, id, title, description });\r\n    setDialogOpen(true);\r\n  }\r\n\r\n  const handleTableRemoveButton = (tableMeta: MUIDataTableMeta) =>{\r\n    const row: any = tableMeta.tableData[tableMeta.rowIndex];\r\n    const { id, title, description } = row;\r\n    setForm({ ...form, id, title, description });\r\n    setRemoveDialogOpen(true);\r\n  }\r\n\r\n\r\n  const handleFormSubmit = async(e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const items = form.id ? await service.update(form) : await service.create(form);\r\n    toast.success(\"Başarıyla kayıt edildi.\");\r\n    handleDialogClose();\r\n    setForm(initialFormState);\r\n    setLoading(false);\r\n    items.length > 0 && setItems(items);\r\n  }\r\n\r\n  const handleRemoveFormSubmit = async(e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const items = form.id ? await service.delete(form.id) : [];\r\n    toast.success(\"Başarıyla silindi.\");\r\n    handleDialogClose();\r\n    setForm(initialFormState);\r\n    setLoading(false);\r\n    items.length > 0 && setItems(items);\r\n  }\r\n\r\n\r\n  const columns: MUIDataTableColumnDef[] = [\r\n    {\r\n      name: \"id\",\r\n      label: \"ID\",\r\n      options: {\r\n        display: false\r\n      }\r\n    },\r\n    {\r\n      name: \"title\",\r\n      label: \"Kategori\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"description\",\r\n      label: \"Açıklama\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n    },\r\n    {\r\n      name: \"actions\",\r\n      label: \"İşlemler\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: false,\r\n        //setCellProps: () => ({ style: { minWidth: \"1px\", maxWidth: \"1px\" }}),\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <React.Fragment>\r\n              <Tooltip title={\"Düzenle\"}>\r\n                <IconButton onClick={() => handleTableUpdateButton(tableMeta)}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n              <Tooltip title={\"Sil\"}>\r\n                <IconButton onClick={() => handleTableRemoveButton(tableMeta)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n            </React.Fragment>\r\n          )\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n\r\n  const options: any = {\r\n    ...MUIDataTableLang(),\r\n    selectableRows: false,\r\n    customToolbar: () => {\r\n      return (\r\n        <Tooltip title={\"Yeni Ekle\"}>\r\n          <IconButton onClick={() => setDialogOpen(true)}>\r\n            <AddIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={dialogOpen} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\">\r\n        <form noValidate onSubmit={handleFormSubmit} autoComplete=\"off\">\r\n          <DialogTitle id=\"form-dialog-title\">Yeni Ekle</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"title\"\r\n              label=\"Kategori Adı\"\r\n              name=\"title\"\r\n              autoComplete=\"title\"\r\n              value={form?.title} onChange={handleInputChange}\r\n            />\r\n\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"description\"\r\n              label=\"Açıklama\"\r\n              name=\"description\"\r\n              autoComplete=\"description\"\r\n              value={form?.description} onChange={handleInputChange}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose} color=\"primary\" disabled={loading}>\r\n              Kapat\r\n          </Button>\r\n            <Button type=\"submit\" color=\"primary\" disabled={loading}>\r\n              Kaydet\r\n          </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n\r\n      <Dialog open={removeDialogOpen} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\">\r\n        <form noValidate onSubmit={handleRemoveFormSubmit} autoComplete=\"off\">\r\n          <DialogTitle id=\"form-dialog-title\">Silme Onayı</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\"><strong>\"{form.title}\"</strong> adlı kategoriyi gerçekten silmek istiyor musunuz ?</DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose} color=\"primary\" disabled={loading}>\r\n              Kapat\r\n          </Button>\r\n            <Button type=\"submit\" color=\"primary\" disabled={loading}>\r\n              Sil\r\n          </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n\r\n\r\n      <MUIDataTable\r\n        title={\"Kategori Listesi\"}\r\n        data={items}\r\n        columns={columns}\r\n        options={options}\r\n\r\n      />\r\n\r\n\r\n    </>\r\n  );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Category;","C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\services\\CategoryService.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\models\\CategoryItem.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\utils\\MUIDataTableLang.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\shared\\AxiosInterceptorMessage.tsx",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\components\\shared\\Loading.tsx",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\theme\\themeReducers.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\theme\\themeActions.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\redux\\theme\\themeTypes.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\Theme.tsx",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\utils\\Alerts.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\Router.tsx",["133","134"],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\layouts\\PrivateRoute.tsx",["135"],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\services\\ReportService.ts",[],"C:\\Users\\Atakan\\Documents\\workspace\\SicakIndirimAdmin\\src\\models\\Report.ts",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":26,"column":6,"nodeType":"142","endLine":26,"endColumn":8,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"141","line":43,"column":6,"nodeType":"142","endLine":43,"endColumn":8,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"149","line":18,"column":8,"nodeType":"147","messageId":"148","endLine":18,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'service'. Either include it or remove the dependency array.","ArrayExpression",["152"],["153"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Loading' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},"Update the dependencies array to be: [service]",{"range":"157","text":"158"},{"range":"159","text":"158"},[771,773],"[service]",[1519,1521]]